#include<iostream>
using namespace std;
class DQue{
private:
    int *arr;
    int front, rear;
    int size;

public:
    DQue(int size){
        arr = new int[size];
        front = rear = -1;
        this->size = size;
    }
    ~DQue(){
        front = rear = -1;
    }
    bool isFull(){
        if((front == -1 && rear == size-1) || (front == rear+1))
            return true;
        return false;
    }
    bool isEmpty(){
        if(front == -1)
            return true;
        return false;
    }
    void push_front(int data){
        if(isFull()){
            cout<<"overflow"<<endl;

        }
        else{
            if(front == -1)
                front = rear = 0;
            else if(front == 0)
                front = size-1;
            else
                --front;
        }
        arr[front] = data;
    }

    void push_back(int data){
        if(isFull()){
            cout<<"overflow"<<endl;
        }
        else{
            if(rear == -1)
                rear = front = 0;
            else if(rear == size-1)
                rear = 0;
            else
                ++rear;
        }
        arr[rear] = data;
    }
    int pop_front(){
        if(!isEmpty()){
            if(front == size-1)
                front = 0;
            else if(front == rear)
                front = rear = -1;

            else
                ++front;
        }
        return arr[front];
    }
    int pop_back(){
        if(!isEmpty()){
            if(rear == 0)
                rear = size-1;
            else if(front == rear)
                front = rear = -1;
            else
                --rear;
        }
        else
            cout<<"overflow"<<endl;
        return arr[rear];
    }
    int getFront(){
        if(isEmpty())
            return -1;
        else
            return arr[front];
    }
    int getBack(){
        if(isEmpty())
            return -1;
        return arr[rear];
    }
    void print(){
        for(int i=0; i<size; i++){
            cout<<arr[i]<<"  ";
        }
    }
};
int main(){
    DQue q(5);
    q.push_back(3);
    q.push_back(4);
    q.push_back(5);
    q.push_back(6);
    q.push_back(7);

    q.print();
    cout<<endl;
   // cout<<q.pop_front()<<endl;

    cout<<q.pop_back()<<endl;
    q.print();
    cout<<q.pop_back()<<endl;
    cout<<endl;
    return 0;
}

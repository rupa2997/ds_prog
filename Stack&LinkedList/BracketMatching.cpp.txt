#include<iostream>
#include<cstring>

using namespace std;
class Stack{
private:
    int top, siz;
    char *store;
public:
    Stack(){
        this->top = -1;
    }
    Stack(int siz){
        this->siz = siz;
        this->top = -1;
        store = new char[siz];
    }
    ~Stack(){
        delete [] store;
    }
    bool isEmpty(){
        return top == -1;
    }
    bool isFull(){
        return top == siz-1;
    }
    void push(char c){
        if(!isFull()){
                top++;
            store[top] = c;
        }
    }
    char pop(){
        if(!isEmpty()){
            char s = store[top];
            top--;
        }
    }
    char peek(){
        return store[top];
    }
};

int main(){

    char str[20];
    Stack s(20);
    int flag = 0;
    cin>>str;
    int len = strlen(str);
    for(int i=0; i<len; i++){

        if(str[i] == '{' || str[i] == '[' || str[i] == '(')
            {
                s.push(str[i]);
                continue;
            }
        if(str[i] == '}' && s.peek() == '{'){
            s.pop();
            flag = 1;
        }
        if(str[i] == ']' && s.peek() == '['){
            s.pop();
            flag = 1;
        }
        if(str[i] == ')' && s.peek() == '('){
            s.pop();
            flag = 1;
        }
    }
    if(s.isEmpty() && flag == 1){
        cout<<"True"<<endl;
    }
    else
        cout<<"False"<<endl;

        return 0;
}
